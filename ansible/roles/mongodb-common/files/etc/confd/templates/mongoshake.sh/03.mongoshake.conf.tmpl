flush > /opt/app/current/conf/mongoshake/mongoshake.conf <<MONGOSHAKE_CONF
conf.version=10
id=mongoshake
master_quorum={{ getv "/env/global.master_quorum" }}
full_sync.http_port={{ getv "/env/global.full_sync_port" }}
incr_sync.http_port={{ getv "/env/global.incr_sync_port" }}
system_profile_port={{ getv "/env/global.system_profile_port" }}
log.level={{ getv "/env/global.log.level" }}
log.dir=/data/mongoshake-logs
log.file=collector.log
log.flush=false
sync_mode={{ getv "/env/global.sync_mode" }}
mongo_urls=mongodb://{{ getv "/env/global.source.user" }}:{{ getv "/env/global.source.password" }}@{{ getv "/env/global.source.address" }}
mongo_cs_url=
mongo_s_url=
tunnel={{ getv "/env/global.tunnel" }}
tunnel.address=mongodb://{{ getv "/env/global.destination.user" }}:{{ getv "/env/global.destination.password" }}@{{ getv "/env/global.destination.address" }}
tunnel.message=raw
tunnel.kafka.partition_number=1
tunnel.json.format=
mongo_connect_mode={{ getv "/env/global.mongo_connect_mode" }}
filter.namespace.black={{ getv "/env/global.filter.namespace.black" }}
filter.namespace.white={{ getv "/env/global.filter.namespace.white" }}
filter.pass.special.db={{ getv "/env/global.filter.pass.special.db" }}
filter.ddl_enable={{ getv "/env/global.filter.ddl_enable" }}
filter.oplog.gids=false
checkpoint.storage.url={{ getv "/env/global.checkpoint.storage.url" }}
checkpoint.storage.db={{ getv "/env/global.checkpoint.storage.db" }}
checkpoint.storage.collection={{ getv "/env/global.checkpoint.storage.collection" }}
checkpoint.start_position={{ getv "/env/global.checkpoint.start_position" }}
transform.namespace={{ getv "/env/global.transform.namespace" }}
full_sync.reader.collection_parallel={{ getv "/env/full_sync.reader.collection_parallel" }}
full_sync.reader.write_document_parallel={{ getv "/env/full_sync.reader.write_document_parallel" }}
full_sync.reader.document_batch_size=128
full_sync.collection_exist_drop={{ getv "/env/full_sync.collection_exist_drop" }}
full_sync.create_index={{ getv "/env/full_sync.create_index" }}
full_sync.executor.insert_on_dup_update={{ getv "/env/full_sync.executor.insert_on_dup_update" }}
full_sync.executor.filter.orphan_document=false
full_sync.executor.majority_enable={{ getv "/env/full_sync.executor.majority_enable" }}
incr_sync.mongo_fetch_method={{ getv "/env/incr_sync.mongo_fetch_method" }}
incr_sync.change_stream.watch_full_document=false
incr_sync.oplog.gids=
incr_sync.shard_key=collection
incr_sync.shard_by_object_id_whitelist=
incr_sync.worker={{ getv "/env/incr_sync.worker" }}
incr_sync.tunnel.write_thread={{ getv "/env/incr_sync.tunnel.write_thread" }}
incr_sync.target_delay={{ getv "/env/incr_sync.target_delay" }}
incr_sync.worker.batch_queue_size=64
incr_sync.adaptive.batching_max_size=1024
incr_sync.fetcher.buffer_capacity=256
incr_sync.executor.upsert={{ getv "/env/direct_tunnel.incr_sync.executor.upsert" }}
incr_sync.executor.insert_on_dup_update={{ getv "/env/direct_tunnel.incr_sync.executor.insert_on_dup_update" }}
incr_sync.conflict_write_to={{ getv "/env/direct_tunnel.incr_sync.conflict_write_to" }}
incr_sync.executor.majority_enable={{ getv "/env/direct_tunnel.incr_sync.majority_enable" }}
special.source.db.flag=
MONGOSHAKE_CONF