{
  "type": "array",
  "properties": [{
      "key": "cluster",
      "description": "cluster properties",
      "type": "array",
      "properties": [
        {
          "key": "name",
          "type": "string",
          "label": "Name",
          "description": "The name of the application",
          "default": "MongoDB Sync",
          "required": "no"
        },
        {
          "key": "description",
          "type": "string",
          "label": "Description",
          "description": "The description of the application",
          "default": "",
          "required": "no"
        },
        {
          "key": "vxnet",
          "label": "VxNet",
          "description": "The vxnet that the application will join",
          "type": "string",
          "default": "",
          "required": "yes"
        },
        {
          "key": "replica",
          "description": "Properties for config server node",
          "label": "Node",
          "type": "array",
          "properties": [{
            "key": "instance_class",
            "label": "Instance class",
            "description": "Instance clase of each node",
            "type": "integer",
            "default": 203,
            "range": [101, 202, 203, 301],
            "required": "yes"
          }, {
            "key": "cpu",
            "label": "CPU",
            "description": "CPUs of each node",
            "type": "integer",
            "default": 2,
            "range": [1, 2, 4, 8],
            "required": "yes"
          }, {
            "key": "memory",
            "label": "Memory",
            "description": "Memory of each node",
            "type": "integer",
            "default": 2048,
            "range": [1024, 2048, 4096, 8192], 
            "required": "yes"
          }]
        }
      ]
    },
    {
      "key": "env",
      "description": "Application configuration properties",
      "type": "array",
      "properties": [
        {
          "key": "global",
          "description": "global configuration",
          "type": "array",
          "properties": [
            {
              "key": "log.level",
              "label": "log.level",
              "description": "Log level, 【debug, info, warning, error】, default info",
              "type": "string",
              "default": "info",
              "range": ["debug", "info", "warning", "error"],
              "required": "yes"
            },
            {
              "key": "sync_mode",
              "label": "sync_mode",
              "description": "Sync mode, default full + incr",
              "default": "all",
              "type": "string",
              "range": [
                "all"
              ],
              "required": "yes"
            },
            {
              "key": "source.address",
              "label": "Sync: source address of MongoDB",
              "description": "Source address, Format: ip:port, for example: 1.1.1.1:27017",
              "type": "string",
              "default": "127.0.0.1:27017",
              "required": "yes"
            },
            {
              "key": "source.user",
              "label": "Sync: source user of MongoDB",
              "description": "Source's user",
              "type": "string",
              "default": "root",
              "required": "yes"
            },
            {
              "key": "source.password",
              "label": "Sync: source user's password of MongoDB",
              "description": "Must contain a combination of uppercase and lowercase letters and numbers, special characters can be used (including @#%&*()_+-=), and the length is between 8-32",
              "type": "password",
              "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z@#\\%\\&\\*\\(\\)\\_\\+\\-\\=]{8,32}$",
              "default": "Change1Pwd",
              "required": "yes"
            },
            {
              "key": "destination.address",
              "label": "Sync: destination address of MongoDB",
              "description": "Destination address, Format: ip:port, for example: 1.1.1.1:27017",
              "type": "string",
              "default": "127.0.0.1:27017",
              "required": "yes"
            },
            {
              "key": "destination.user",
              "label": "Sync: destination user of MongoDB",
              "description": "Destination's user",
              "type": "string",
              "default": "root",
              "required": "yes"
            },
            {
              "key": "destination.password",
              "label": "Sync: destination user's password of MongoDB",
              "description": "Must contain a combination of uppercase and lowercase letters and numbers, special characters can be used (including @#%&*()_+-=), and the length is between 8-32",
              "type": "password",
              "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z@#\\%\\&\\*\\(\\)\\_\\+\\-\\=]{8,32}$",
              "default": "Change1Pwd",
              "required": "yes"
            },
            {
              "key": "full_sync_port",
              "label": "full_sync_port",
              "description": "Full stage listening port, default 9101",
              "type": "integer",
              "default": 9101,
              "required": "no",
              "min": 1025,
              "max": 65535
            },
            {
              "key": "incr_sync_port",
              "label": "incr_sync_port",
              "description": "Increment stage listening port, default 9100",
              "type": "integer",
              "default": 9100,
              "required": "no",
              "min": 1025,
              "max": 65535
            },
            {
              "key": "system_profile_port",
              "label": "system_profile_port",
              "description": "pprof listening port, Users can view internal running stack information. default 9200",
              "type": "integer",
              "default": 9200,
              "required": "no",
              "min": 1025,
              "max": 65535
            },
            {
              "key": "tunnel",
              "label": "tunnel",
              "description": "[direct, rpc, tcp, file, kafka], default value direct, the current version only supports direct",
              "default": "direct",
              "type": "string",
              "range": [
                "direct"
              ],
              "required": "no"
            },
            {
              "key": "mongo_connect_mode",
              "label": "mongo_connect_mode",
              "description": "[primary, secondaryPreferred, standalone], default value secondaryPreferred",
              "default": "secondaryPreferred",
              "type": "string",
              "range": [
                "primary",
                "secondaryPreferred",
                "standalone"
              ],
              "required": "no"
            },
            {
              "key": "filter.namespace.black",
              "label": "filter.namespace.black",
              "description": "Blacklist filter",
              "default": "",
              "type": "string",
              "required": "no"
            },
            {
              "key": "filter.namespace.white",
              "label": "filter.namespace.white",
              "description": "Whitelist filter",
              "default": "",
              "type": "string",
              "required": "no"
            },
            {
              "key": "filter.pass.special.db",
              "label": "filter.pass.special.db",
              "description": "Specify a special namespace through, such as admin, system.views, mongoshake, config",
              "default": "",
              "type": "string",
              "required": "no"
            },
            {
              "key": "filter.ddl_enable",
              "label": "filter.ddl_enable",
              "description": "Whether to synchronize DDL",
              "default": "false",
              "range": ["true", "false"],
              "type": "string",
              "required": "no"
            },
            {
              "key": "checkpoint.storage.url",
              "label": "checkpoint.storage.url",
              "description": "Identifies where checkpoints are stored",
              "default": "",
              "type": "string",
              "required": "no"
            },
            {
              "key": "checkpoint.storage.db",
              "label": "checkpoint.storage.db",
              "description": "The database name of checkpoint store, the default is mongoshake",
              "default": "mongoshake",
              "type": "string",
              "required": "no"
            },
            {
              "key": "checkpoint.storage.collection",
              "label": "checkpoint.storage.collection",
              "description": "The collection name of checkpoint store, the default is ckpt_default",
              "default": "ckpt_default",
              "type": "string",
              "required": "no"
            },
            {
              "key": "checkpoint.start_position",
              "label": "checkpoint.start_position",
              "description": "Specify the location to start pulling oplogs",
              "default": "1970-01-01T00:00:00Z",
              "type": "string",
              "required": "no"
            },
            {
              "key": "transform.namespace",
              "label": "transform.namespace",
              "description": "Whether to enable namespace conversion, such as a.b of the source library, converted to c.d in the destination library. Not enabled by default",
              "default": "",
              "type": "string",
              "required": "no"
            }
          ]
        },
    
        {
          "key": "full_sync",
          "description": "full sync configuration",
          "type": "array",
          "properties": [
            {
              "key": "reader.collection_parallel",
              "label": "reader.collection_parallel",
              "description": "The maximum number of collections to pull concurrently at one time. Default 6",
              "type": "integer",
              "default": 6,
              "required": "no",
              "max": 10
            },
            {
              "key": "reader.write_document_parallel",
              "label": "reader.write_document_parallel",
              "description": "Inside a collection, how many threads are started for concurrent writing. Default is 8.",
              "type": "integer",
              "default": 8,
              "required": "no",
              "max": 10
            },
            {
              "key": "collection_exist_drop",
              "label": "collection_exist_drop",
              "description": "If the same collection exists at the destination, whether it needs to be deleted first and then synchronized, it is enabled by default",
              "type": "string",
              "default": "true",
              "range": ["true", "false"],
              "required": "no"
            },
            
            {
              "key": "create_index",
              "label": "create_index",
              "description": "Whether to create an index after the data synchronization is complete during the full period, background by default",
              "type": "string",
              "default": "background",
              "range": ["none", "foreground","background"],
              "required": "no"
            },
            
            {
              "key": "executor.insert_on_dup_update",
              "label": "executor.insert_on_dup_update",
              "description": "If _id exists in the destination library, whether to change the insert statement to an update statement. Not enabled by default",
              "type": "string",
              "default": "false",
              "range": ["true", "false"],
              "required": "no"
            },
            {
              "key": "executor.majority_enable",
              "label": "executor.majority_enable",
              "description": "Whether to enable majority write on the write side of the full stage. Default false",
              "type": "string",
              "default": "false",
              "range": ["true", "false"],
              "required": "no"
            }
          ]
        },
        {
          "key": "incr_sync",
          "description": "incrmental sync configuration",
          "type": "array",
          "properties": [
            {
              "key": "mongo_fetch_method",
              "label": "mongo_fetch_method",
              "description": "The way to pull increments from the source MongoDB, the default oplog",
              "type": "string",
              "default": "oplog",
              "range": ["oplog", "change_stream"],
              "required": "no"
            },
            {
              "key": "worker",
              "label": "worker",
              "description": "The number of worker threads, the default is 8",
              "type": "integer",
              "default": 8,
              "required": "no"
            },
            {
              "key": "tunnel.write_thread",
              "label": "tunnel.write_thread",
              "description": "Controls the number of serialized threads, the default is 1 tunnel (worker) corresponds to 1.",
              "type": "integer",
              "default": 8,
              "required": "no"
            },
            {
              "key": "target_delay",
              "label": "target_delay",
              "description": "Controls the time to delay synchronization, the destination can lag behind the source by a specified number of seconds",
              "type": "integer",
              "default": 0,
              "required": "no"
            }
          ]
        },
        {
          "key": "direct_tunnel",
          "description": "direct tunnel configuration",
          "type": "array",
          "properties": [
            {
              "key": "incr_sync.executor.upsert",
              "label": "incr_sync.executor.upsert",
              "description": "If _id does not exist in the destination library, whether to change the update statement to an insert statement. Default false",
              "type": "string",
              "default": "false",
              "range": ["true", "false"],
              "required": "no"
            },
            {
              "key": "incr_sync.executor.insert_on_dup_update",
              "label": "incr_sync.executor.insert_on_dup_update",
              "description": "If _id exists in the destination library, whether to change the insert statement to an update statement. Default false",
              "type": "string",
              "default": "false",
              "range": ["true", "false"],
              "required": "no"
            },
            {
              "key": "incr_sync.conflict_write_to",
              "label": "incr_sync.conflict_write_to",
              "description": "If there is a conflict in writing, record the conflicting document. db means to record the conflict in the db corresponding to the checkpoint url. sdk means write to sdk (open source is useless). The default is none.",
              "type": "string",
              "default": "none",
              "required": "no"
            },
            {
              "key": "incr_sync.majority_enable",
              "label": "incr_sync.majority_enable",
              "description": "Whether to enable majority write on the write side in the incremental phase. Default false",
              "type": "string",
              "default": "false",
              "range": ["true", "false"],
              "required": "no"
            }
          ]
        }
      ]
    }
    
  ]
}